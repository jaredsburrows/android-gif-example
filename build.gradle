buildscript {
  System.properties["com.android.build.gradle.overrideVersionCheck"] = "true"
  apply from: rootProject.file("gradle/versions.gradle")

  rootProject.ext.ci = rootProject.hasProperty("ci")

  configure([buildscript.repositories, project.repositories]) {
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath plugs.gradle
    classpath plugs.gradleAndroidCommandPlugin
    classpath plugs.playPublisher
    classpath plugs.buildScanPlugin
    classpath plugs.dexcountGradlePlugin
    classpath plugs.gradleAndroidApkSizePlugin
    classpath plugs.coverallsGradlePlugin
    classpath plugs.gradleErrorpronePlugin
    classpath plugs.gradleVersionsPlugin
  }
}

apply from: rootProject.file("gradle/scan.gradle")
apply plugin: "com.android.application"
apply plugin: "android-command"
apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/quality.gradle")
apply from: rootProject.file("gradle/publish.gradle")
apply from: rootProject.file("gradle/wrapper.gradle")
apply plugin: "com.github.triplet.play"
//apply plugin: "com.getkeepsafe.dexcount"
//apply plugin: "com.vanniktech.android.apk.size"
apply plugin: "net.ltgt.errorprone"
apply plugin: "com.github.ben-manes.versions"

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "burrows.apps.example.gif"
    versionCode 1
    versionName "1.0"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    testApplicationId "burrows.apps.example.gif.test"
    testInstrumentationRunner "test.CustomTestRunner"
    resConfigs "en" // Keep only english resource files for now
    vectorDrawables.useSupportLibrary = true
  }

  dataBinding {
    enabled = true
    enabledForTests = true
  }

  compileOptions {
    sourceCompatibility rootProject.ext.sourceCompatibilityVersion
    targetCompatibility rootProject.ext.sourceCompatibilityVersion
  }

  dexOptions {
    preDexLibraries !rootProject.ext.ci
  }

  lintOptions {
    textReport true
    textOutput "stdout"
    checkAllWarnings true
    warningsAsErrors true
    showAll true
    explainIssues true
    disable "UnusedResources"              // Unused will be removed on release
    disable "IconExpectedSize"             // Using the material icons provided from Google
    disable "GoogleAppIndexingApiWarning"  // We might want to index our app later
    disable "InvalidPackage"               // Butterknife, Okio and Realm
    disable "ResourceType"                 // Annotation binding
    disable "GradleDependency"
    disable "NewerVersionAvailable"
    abortOnError false
  }

  // Debug - testing and letting others use
  signingConfigs {
    debug {
      storeFile rootProject.file(".buildscript/debug.keystore")
      storePassword rootProject.ext.debugKeystorePass
      keyAlias rootProject.ext.debugKeystoreUser
      keyPassword rootProject.ext.debugKeystorePass
    }
  }

  buildTypes {
    debug {
      debuggable true
      testCoverageEnabled true // generated coverage for android tests
      applicationIdSuffix ".debug"
    }

    release {
      minifyEnabled false
      proguardFile getDefaultProguardFile("proguard-android-optimize.txt")
      proguardFile "proguard-rules.txt"
      signingConfig signingConfigs.debug
    }
  }

  testOptions {
    animationsDisabled = true

    unitTests {
      returnDefaultValues = true

      all {
        jacoco {
          includeNoLocationClasses = true
        }
      }
    }
  }

  packagingOptions {
    exclude "**/*.txt"
    exclude "**/*.xml"
    exclude "**/*.properties"
  }
}

// Resolves dependency versions across test and production APKs, specifically, transitive
// dependencies. This is required since Espresso internally has a dependency on support-annotations.
configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

dependencies {
  // Android/Google
  implementation deps.design
  implementation deps.cardviewv7
  // Other
  implementation deps.okhttp
  implementation deps.loggingInterceptor
  implementation deps.adapterRxjava2
  implementation deps.converterGson
  implementation deps.retrofit
  implementation deps.rxAndroid
  implementation deps.rxJava
  implementation deps.glide
  implementation deps.okhttp3Integration
  implementation deps.dagger

  annotationProcessor deps.daggerCompiler

  debugImplementation deps.leakcanaryAndroid
  releaseImplementation deps.leakcanaryAndroidNoOp

  androidTestImplementation deps.junit
  androidTestImplementation deps.assertjCore
  androidTestImplementation deps.dexmaker
  androidTestImplementation deps.dexmakerMockito
  androidTestImplementation deps.runner
  androidTestImplementation deps.espressoCore
  androidTestImplementation deps.espressoIntents
  androidTestImplementation(deps.espressoContrib) { exclude group: "com.android.support" }
  androidTestImplementation deps.mockwebserver
  androidTestImplementation deps.dagger

  androidTestAnnotationProcessor deps.daggerCompiler

  testImplementation deps.junit
  testImplementation deps.assertjCore
  testImplementation deps.mockitoCore
  testImplementation deps.leakcanaryAndroidNoOp
  testImplementation deps.mockwebserver
  testImplementation deps.equalsverifier
}
